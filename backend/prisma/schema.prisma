generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  USER
  ADMIN
}

model User {
  id            String         @id @default(cuid())
  username      String         @unique
  email         String         @unique
  password      String
  role          Role           @default(GUEST)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  questions     Question[]
  answers       Answer[]
  notifications Notification[]
  votes         Vote[]
}

model Question {
  id                String     @id @default(cuid())
  title             String
  description       String     // Rich text HTML
  tags              String[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  user              User       @relation(fields: [userId], references: [id])
  userId            String

  answers           Answer[]
  acceptedAnswerId  String?    // Optional
}

model Answer {
  id          String     @id @default(cuid())
  content     String     // Rich text HTML
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user        User       @relation(fields: [userId], references: [id])
  userId      String

  question    Question   @relation(fields: [questionId], references: [id])
  questionId  String

  votes       Vote[]
}

model Vote {
  id        String   @id @default(cuid())
  value     Int      // +1 or -1

  user      User     @relation(fields: [userId], references: [id])
  userId    String

  answer    Answer   @relation(fields: [answerId], references: [id])
  answerId  String
}

model Notification {
  id        String     @id @default(cuid())
  type      String     // "mention", "answer", "comment"
  isRead    Boolean    @default(false)
  message   String
  createdAt DateTime   @default(now())

  user      User       @relation(fields: [userId], references: [id])
  userId    String
}
